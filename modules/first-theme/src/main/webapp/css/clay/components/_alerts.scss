.alert {
	border-color: transparent;
	border-style: $alert-border-style;
	border-width: $alert-border-width;

	@include border-radius($alert-border-radius);

	display: block;
	font-size: $alert-font-size;
	margin-bottom: $alert-margin-bottom;
	padding: $alert-padding-y $alert-padding-x;
	position: relative;
	word-wrap: break-word;

	.alert-btn {
		@include clay-button-variant($alert-btn);
	}

	.btn-group {
		@include clay-container($alert-btn-group);
	}

	.btn-group-item {
		@include clay-container($alert-btn-group-item);
	}

	.close {
		@include clay-close($alert-close);
	}

	.lead {
		font-size: $alert-lead-font-size;
		font-weight: $alert-lead-font-weight;
		margin-right: $alert-lead-spacer-x;
	}

	.component-title {
		@include clay-text-typography($alert-title);
	}

	.component-subtitle {
		@include clay-text-typography($alert-subtitle);
	}
}

.alert-heading {
	// Specified to prevent conflicts of changing $headings-color

	color: inherit;
}

.alert-footer {
	@include clay-container($alert-footer);
}

.alert-link,
.alert-link.btn-unstyled {
	font-weight: $alert-link-font-weight;
	text-decoration: $alert-link-decoration;

	&:hover,
	&:focus {
		text-decoration: $alert-link-hover-decoration;
	}
}

.alert-indicator {
	font-size: $alert-indicator-font-size;

	+ .lead {
		margin-left: $alert-lead-spacer-x;
	}
}

// Alert Dismissible

.alert-dismissible {
	padding-bottom: $alert-dismissible-padding-bottom;
	padding-left: $alert-dismissible-padding-left;
	padding-right: $alert-dismissible-padding-right;
	padding-top: $alert-dismissible-padding-top;
}

// Alert Fluid

.alert-fluid {
	@include clay-css($alert-fluid);

	&.alert-dismissible {
		.container,
		.container-fluid {
			@include clay-css($alert-fluid-dismissible-container);
		}
	}

	.container,
	.container-fluid {
		@include clay-css($alert-fluid-container);
	}

	.close {
		right: calc(#{$grid-gutter-width / 2} + #{$nav-btn-margin-x});
	}
}

// Alert Notifications

.alert-container {
	height: 0;
	position: relative;
}

.alert-notifications {
	.alert {
		@include clay-css($alert-notification);

		@include media-breakpoint-down(sm) {
			@include clay-css($alert-notification-sm-down);
		}

		&:last-child {
			margin-bottom: 0;
		}
	}

	.alert-fluid {
		padding-bottom: 0;
		padding-top: 0;
	}
}

.alert-notifications-absolute {
	bottom: $alert-notifications-absolute-bottom;
	height: 0;
	left: $alert-notifications-absolute-left;
	position: absolute;
	right: $alert-notifications-absolute-right;
	top: $alert-notifications-absolute-top;
	z-index: $zindex-alert-notifications;

	@include clay-scale-component {
		bottom: $alert-notifications-absolute-bottom-mobile;
		left: $alert-notifications-absolute-left-mobile;
		right: $alert-notifications-absolute-right-mobile;
		top: $alert-notifications-absolute-top-mobile;
	}
}

.alert-notifications-fixed {
	bottom: $alert-notifications-fixed-bottom;
	left: $alert-notifications-fixed-left;
	position: fixed;
	right: $alert-notifications-fixed-right;
	top: $alert-notifications-fixed-top;
	z-index: $zindex-alert-notifications;

	@include clay-scale-component {
		bottom: $alert-notifications-fixed-bottom-mobile;
		left: $alert-notifications-fixed-left-mobile;
		right: $alert-notifications-fixed-right-mobile;
		top: $alert-notifications-fixed-top-mobile;
	}
}

// Alert List

.alert-list {
	display: flex;
	flex-direction: column;
	margin-bottom: 0;
	padding-left: 0;

	.close {
		top: 50%;
		transform: translateY(-50%);
	}
}

// Alert in Modal

.modal-body {
	.alert {
		.close {
			right: $modal-inner-padding;
		}
	}

	.alert-list {
		.alert-fluid:last-child {
			margin-bottom: math-sign($alert-fluid-border-bottom-width);
		}
	}
}

// Alert Autofit Row

.autofit-row.alert-autofit-row {
	@include clay-autofit-row($alert-autofit-row);
}

// Alert Feedback

.alert-feedback.alert {
	@include clay-css($alert-feedback);

	.alert-autofit-row,
	.autofit-row {
		display: inline;
		margin-left: 0;
		margin-right: 0;

		> .autofit-col {
			display: inline;
			padding-left: 0;
			padding-right: 0.25em;

			> .autofit-section {
				display: inline;
			}
		}
	}

	.close {
		@include clay-close($alert-feedback-close);
	}

	.lead {
		margin-right: 0;

		+ .component-text {
			margin-left: 0.25em;
		}
	}
}

// .alert-inline

.alert-inline.alert {
	@include clay-css($alert-inline);

	&.alert-dismissible {
		$alert-dismissible: setter(
			map-get($alert-inline, alert-dismissible),
			()
		);

		@include clay-css($alert-dismissible);

		&.alert-fluid {
			$alert-dismissible-alert-fluid: setter(
				map-get($alert-inline, alert-dismissible-alert-fluid),
				()
			);

			@include clay-css($alert-dismissible-alert-fluid);

			> .container,
			> .container-fluid {
				$container-fluid: setter(
					map-get($alert-dismissible-alert-fluid, container-fluid),
					()
				);

				@include clay-css($container-fluid);

				> .alert-autofit-row {
					$alert-autofit-row: setter(
						map-get($container-fluid, alert-autofit-row),
						map-get($alert-inline, alert-autofit-row),
						()
					);

					@include clay-css($alert-autofit-row);
				}
			}
		}
	}

	> .alert-autofit-row {
		$alert-autofit-row: setter(
			map-get($alert-inline, alert-autofit-row),
			()
		);

		@include clay-css($alert-autofit-row);
	}

	.close {
		$close: setter(map-get($alert-inline, close), ());

		@include clay-close($close);
	}
}

// Alert Autofit Stacked

.alert-autofit-stacked.alert {
	@include clay-css($alert-autofit-stacked);

	> .alert-autofit-row {
		$alert-autofit-row: setter(
			map-get($alert-autofit-stacked, alert-autofit-row),
			()
		);

		@include clay-css($alert-autofit-row);

		> .autofit-col {
			$autofit-col: setter(map-get($alert-autofit-row, autofit-col), ());

			@include clay-css($autofit-col);
		}

		.btn-group {
			$btn-group: setter(map-get($alert-autofit-row, btn-group), ());

			@include clay-css($btn-group);
		}
	}

	.close {
		$close: setter(map-get($alert-autofit-stacked, close), ());

		@include clay-close($close);
	}
}

// Alert Autofit Stacked Sm Down

.alert-autofit-stacked-sm-down.alert {
	@include clay-css($alert-autofit-stacked-sm-down);

	> .alert-autofit-row {
		$alert-autofit-row: setter(
			map-get($alert-autofit-stacked-sm-down, alert-autofit-row),
			()
		);

		@include media-breakpoint-down(sm) {
			@include clay-css($alert-autofit-row);
		}

		> .autofit-col {
			$autofit-col: setter(map-get($alert-autofit-row, autofit-col), ());

			@include media-breakpoint-down(sm) {
				@include clay-css($autofit-col);
			}
		}

		.btn-group {
			$btn-group: setter(map-get($alert-autofit-row, btn-group), ());

			@include media-breakpoint-down(sm) {
				@include clay-css($btn-group);
			}
		}
	}

	.close {
		$close: setter(map-get($alert-autofit-stacked-sm-down, close), ());

		@include media-breakpoint-down(sm) {
			@include clay-css($close);
		}
	}
}

// Alert Autofit Stacked Xs Down

.alert-autofit-stacked-xs-down.alert {
	@include clay-css($alert-autofit-stacked-xs-down);

	> .alert-autofit-row {
		$alert-autofit-row: setter(
			map-get($alert-autofit-stacked-xs-down, alert-autofit-row),
			()
		);

		@include media-breakpoint-down(xs) {
			@include clay-css($alert-autofit-row);
		}

		> .autofit-col {
			$autofit-col: setter(map-get($alert-autofit-row, autofit-col), ());

			@include media-breakpoint-down(xs) {
				@include clay-css($autofit-col);
			}
		}

		.btn-group {
			$btn-group: setter(map-get($alert-autofit-row, btn-group), ());

			@include media-breakpoint-down(xs) {
				@include clay-css($btn-group);
			}
		}
	}

	.close {
		$close: setter(map-get($alert-autofit-stacked-xs-down, close), ());

		@include media-breakpoint-down(xs) {
			@include clay-css($close);
		}
	}
}

// Alert Indicator Start

.alert-indicator-start.alert {
	@include clay-css($alert-indicator-start);

	&.alert-fluid {
		$alert-fluid: setter(map-get($alert-indicator-start, alert-fluid), ());

		@include clay-css($alert-fluid);

		> .container,
		> .container-fluid {
			$container-fluid: setter(
				map-get($alert-fluid, container-fluid),
				()
			);

			@include clay-css($container-fluid);
		}
	}

	&.alert-feedback {
		$alert-feedback: setter(
			map-get($alert-indicator-start, alert-feedback),
			()
		);

		@include clay-css($alert-feedback);
	}

	.alert-indicator {
		$alert-indicator: setter(
			map-get($alert-indicator-start, alert-indicator),
			()
		);

		@include clay-css($alert-indicator);

		+ .lead {
			$lead: setter(map-get($alert-indicator, lead), ());

			@include clay-css($lead);
		}
	}

	.alert-autofit-row {
		$alert-autofit-row: setter(
			map-get($alert-indicator-start, alert-autofit-row),
			()
		);

		@include clay-css($alert-autofit-row);

		.alert-indicator:only-child {
			$alert-indicator-only-child: setter(
				map-get($alert-autofit-row, alert-indicator-only-child),
				()
			);

			@include clay-css($alert-indicator-only-child);
		}
	}
}

// Alert Variants

@each $color, $value in $alert-palette {
	.alert-#{$color} {
		@include clay-alert-variant($value);
	}
}
